# ========================
# Datasets en 01_raw
# ========================

# ==== inputs =====
#Tablas base del proyecto información cruda 
bank_customer_transactions:
  type: pandas.CSVDataset
  filepath: data/01_raw/bank_customer_transactions.csv

cleaned_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/cleaned_dataset.csv

customer_agg:
  type: pandas.CSVDataset
  filepath: data/01_raw/customer_agg.csv

customers:
  type: pandas.CSVDataset
  filepath: data/01_raw/customers.csv

foreign_customer_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/foreign_customer_dataset.csv

fraud_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/fraud_dataset.csv

RFM:
  type: pandas.CSVDataset
  filepath: data/01_raw/RFM.csv

transactions:
  type: pandas.CSVDataset
  filepath: data/01_raw/transactions.csv

# === Datasets INTERMEDIATE (output de limpieza) — Parquet + versionado ===
#NO VARIABLES IRRELEVANTES se eliminan variables que podrían tener poca relevancia
NIV_cleaned_dataset:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/NIV_cleaned_dataset.parquet
  versioned: true

NIV_customer_agg:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/NIV_customer_agg.parquet
  versioned: true

NIV_RFM:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/NIV_RFM.parquet
  versioned: true
# === PRIMARY (datasets transformados) — Parquet + versionado
#Datasets en 
PRI_cleaned:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_cleaned.parquet
  versioned: true

PRI_customer:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_customer.parquet
  versioned: true

PRI_rfm:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_rfm.parquet
  versioned: true

PRI_v2_cleaned:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_v2_cleaned.parquet
  versioned: false

PRI_v2_customer:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_v2_customer.parquet
  versioned: false

PRI_v2_rfm:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_v2_rfm.parquet
  versioned: false

# Dataset integrado (merge de los 3 datasets principales a utilizar)
PRI_full:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_full.parquet
  versioned: true
#Segunda versión si outliers
PRI_FULL_V2:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_FULL_V2.parquet
  versioned: false
#Este es el nuevo PRI_FULL pero con las nuevas features creadas a partir de fraud, dejo esto para no romper notebooks ///BORRAR SI HACE FALTA ////
PRI_full_fraud_features:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_full_fraud_features.parquet



# Dataset de salida del pipeline Feature engineering :p
PRI_FULL_BASE:
  type: pandas.ParquetDataset
  filepath: data/04_feature/PRI_FULL_BASE.parquet
  versioned: false


# === REPORTING (múltiples formatos)
# Reportes “inicial” y “final”: si quieres mantener CSV con latin1, déjalos así.
report_cleaned_inicial:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_cleaned_inicial.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_customer_inicial:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_customer_inicial.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_rfm_inicial:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_rfm_inicial.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_cleaned_final:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_cleaned_final.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_customer_final:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_customer_final.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_rfm_final:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_rfm_final.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

#Este es el dataframe con las variables utiles para los modelos (CLASIFICIÓN) definidos en 03_2
Features_training_v1:
  type: pandas.ParquetDataset
  filepath: data/05_model_input/Features_training_v1.parquet

#Este es el dataframe con las variables utiles para los modelos (REGRESIÓN) definidos en 03_2
Features_training_v2:
  type: pandas.ParquetDataset
  filepath: data/05_model_input/Features_training_v2.parquet


# ======================================================================================
  # Guardados en 07_model_output como PickleDataset (.pkl) para modelos de clasificación
# ======================================================================================

# --- KNeighborsClassifier ---
knn_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/clasificacion/knn_results.pkl

# --- DecisionTreeClassifier ---
dt_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/clasificacion/dt_results.pkl

# --- RandomForestClassifier ---
rf_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/clasificacion/rf_results.pkl

# --- MLPClassifier ---
mlp_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/clasificacion/mlp_results.pkl

# --- XGBClassifier ---
xgb_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/clasificacion/xgb_results.pkl


# ======================================================================================
# Guardados en 07_model_output como PickleDataset (.pkl) Para modelos de regresión :D
# ======================================================================================

# --- Linear Regression ---
linear_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/regresion/linear_results.pkl

# --- Ridge Regression ---
ridge_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/regresion/ridge_results.pkl

# --- Lasso Regression ---
lasso_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/regresion/lasso_results.pkl

# --- Random Forest Regressor ---
rf_regressor_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/regresion/rf_regressor_results.pkl

# --- XGBoost Regressor ---
xgb_regressor_results:
  type: pickle.PickleDataset
  filepath: data/07_model_output/regresion/xgb_regressor_results.pkl



