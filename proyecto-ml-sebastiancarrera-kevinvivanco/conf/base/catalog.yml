# ============================================================
# DATA CATALOG 
# Estructura tipo Data Lakehouse: RAW â†’ INTERMEDIATE â†’ PRIMARY â†’ FEATURE â†’ MODEL â†’ REPORT
# ============================================================


# ============================================================
# 01_RAW  â†’ Datos originales / fuentes externas
# ============================================================
bank_customer_transactions:
  type: pandas.CSVDataset
  filepath: data/01_raw/bank_customer_transactions.csv

cleaned_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/cleaned_dataset.csv

customer_agg:
  type: pandas.CSVDataset
  filepath: data/01_raw/customer_agg.csv

customers:
  type: pandas.CSVDataset
  filepath: data/01_raw/customers.csv

foreign_customer_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/foreign_customer_dataset.csv

fraud_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/fraud_dataset.csv

RFM:
  type: pandas.CSVDataset
  filepath: data/01_raw/RFM.csv

transactions:
  type: pandas.CSVDataset
  filepath: data/01_raw/transactions.csv


# ============================================================
# 02_INTERMEDIATE  â†’ Limpieza y tratamiento inicial (sin variables irrelevantes)
# ============================================================
NIV_cleaned_dataset:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/NIV_cleaned_dataset.parquet
  versioned: true

NIV_customer_agg:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/NIV_customer_agg.parquet
  versioned: true

NIV_RFM:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/NIV_RFM.parquet
  versioned: true


# ============================================================
# 03_PRIMARY  â†’ Datos consolidados y transformados
# ============================================================
PRI_cleaned:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_cleaned.parquet
  versioned: true

PRI_customer:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_customer.parquet
  versioned: true

PRI_rfm:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_rfm.parquet
  versioned: true

# Dataset integrado (merge de cleaned + customer + RFM)
PRI_full:
  type: pandas.ParquetDataset
  filepath: data/03_primary/PRI_full.parquet
  versioned: true


# ============================================================
# 04_FEATURE  â†’ Feature Engineering (RFM, fraude, valor cliente)
# ============================================================
# Features base RFM
rfm_features:
  type: pandas.ParquetDataset
  filepath: data/04_feature/rfm_features.parquet
  versioned: true

# RFM con segmentos de clientes
rfm_with_segments:
  type: pandas.ParquetDataset
  filepath: data/04_feature/rfm_with_segments.parquet
  versioned: true

# Features combinadas de cliente (valor, frecuencia, etc.)
customer_features_enriched:
  type: pandas.ParquetDataset
  filepath: data/04_feature/customer_features_enriched.parquet
  versioned: true

# Features de fraude transaccional
transactions_with_fraud_features:
  type: pandas.ParquetDataset
  filepath: data/04_feature/transactions_with_fraud_features.parquet
  versioned: true


# ============================================================
# 05_MODEL_INPUT  â†’ Dataset listo para entrenamiento ML
# ============================================================
transactions_model_ready:
  type: pandas.ParquetDataset
  filepath: data/05_model_input/transactions_model_ready.parquet
  versioned: true


# ============================================================
# 06_MODELS  â†’ Artefactos de modelos entrenados
# ============================================================
fraud_detection_model:
  type: pickle.PickleDataset
  filepath: data/06_models/fraud_detector.pkl
  versioned: true

customer_segmentation_model:
  type: pickle.PickleDataset
  filepath: data/06_models/segmentation.pkl
  versioned: true


# ============================================================
# ðŸ“Š 08_REPORTING  â†’ Resultados finales y reportes
# ============================================================
# --- CSV (iniciales y finales) ---
report_cleaned_inicial:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_cleaned_inicial.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_customer_inicial:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_customer_inicial.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_rfm_inicial:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_rfm_inicial.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_cleaned_final:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_cleaned_final.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_customer_final:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_customer_final.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }

report_rfm_final:
  type: pandas.CSVDataset
  filepath: data/08_reporting/report_rfm_final.csv
  load_args: { encoding: latin1 }
  save_args: { index: False, encoding: latin1 }


# --- Otros formatos de salida ---
rfm_analysis_report:
  type: pandas.ExcelDataset
  filepath: data/08_reporting/rfm_analysis.xlsx
  save_args: { engine: openpyxl, index: false }

model_metrics:
  type: json.JSONDataset
  filepath: data/08_reporting/model_metrics.json

fraud_alerts:
  type: pandas.CSVDataset
  filepath: data/08_reporting/fraud_alerts.csv
  save_args: { index: False }
